import Head from "next/head";
import { useEffect, useState } from "react";
import styles from "../styles/Home.module.css";
import { abi } from "../public/const.js";
import { ethers } from "ethers";

export default function Home() {
  const [players, setPlayers] = useState([]);
  const [manager, setManager] = useState("Loading");
  const [winner, setWinner] = useState("Not yet");
  const [address, setAddress] = useState(
    "0x20a87169fc0a4c4cdd5541d4bc8ab7a1a1a3cce4"
  );
  const [submit, setSubmit] = useState(0);

  async function enter() {
    const provider = new ethers.providers.Web3Provider(
      window.ethereum,
      "goerli"
    );
    await provider.send("eth_requestAccounts", []);
    const signer = provider.getSigner();
    let contract = new ethers.Contract(address, abi, signer);
    try {
      await contract.enter({ value: ethers.utils.parseUnits("0.11", "ether") });
      setSubmit(submit + 1);
    } catch (e) {
      console.log(e);
    }
  }
  async function pickWinner() {
    const provider = new ethers.providers.Web3Provider(
      window.ethereum,
      "goerli"
    );
    await provider.send("eth_requestAccounts", []);
    const signer = provider.getSigner();
    let contract = new ethers.Contract(address, abi, signer);
    try {
      await contract.pickWinner();
      setWinner("Winner was foud, check your wallet to see if you won");
      setSubmit(submit + 1);
    } catch (e) {
      console.log(e);
    }
  }
  useEffect(() => {
    console.log("Loading ...");
    let provider = ethers.getDefaultProvider("goerli");
    // We connect to the Contract using a Provider, so we will only
    // have read-only access to the Contract
    let contract = new ethers.Contract(address, abi, provider);
    const fetchPlayers = async () => {
      console.log(lotteryPlayers);
      let lotteryPlayers = await contract.getPlayers();
      if (JSON.stringify(players) !== JSON.stringify(lotteryPlayers)) {
        setPlayers(lotteryPlayers);
      }
      let lotteryManager = await contract.manager();
      if (lotteryManager !== manager) {
        setManager(lotteryManager);
      }
    };
    fetchPlayers();
  }, [submit, players, manager]);

  function handleChange(event) {
    setAddress(event.target.value);
  }

  function handleSubmit(event) {
    alert("An address was submitted: " + address);
    setSubmit(submit + 1);
    console.log("submitted: ", address);
    event.preventDefault();
  }
  return (
    <div className={styles.container}>
      <Head>
        <title>Lottery Dapp</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <form>
        <label>Smart contract address:</label>
        <input
          type="name"
          id="addr"
          name="addr"
          pattern="[a-f0-9]{1,15}"
          title="Address should be digits (0 to 9) or alphabets (a to f)."
          value={address}
          onChange={handleChange}
        />

        <button type="submit" onClick={handleSubmit}>
          Submit
        </button>
      </form>
      <div>manager of this lottery is: {manager}</div>
      <div>
        <button onClick={enter} className={styles.button}>
          Enter the lottery
        </button>
      </div>
      <div>
        <button onClick={pickWinner} className={styles.button}>
          Pick winner
        </button>
      </div>
      <div>{winner !== "Not yet" ? winner : ""}</div>
      <h1>Players</h1>
      <div>
        {players.map((item, i) => {
          return (
            <ul key={i} value={item}>
              {item}
            </ul>
          );
        })}
      </div>
    </div>
  );
}
